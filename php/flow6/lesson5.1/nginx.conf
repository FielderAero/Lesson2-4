server {
    listen 80;

    server_name php5.loc;
    root        /home/pi/www/php5;
    index       index.php;

    # Путь до логов - файлов с информацией о запросах к серверу
    access_log  /path/to/basic/log/access.log;
    # Путь до файла-лога с информацией об ошибках
    error_log   /path/to/basic/log/error.log;

    # По умолчанию, на все типы запроса
    # Но так как у этого типа приоритет ниже, чем у нижестоящих выражений, он будет обрабатываться последнюю очередь
    location / {
        # Если запрос не содержит реальной директории или файла, то перенаправляем на index.php
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
        try_files $uri =404;
    }
    # По умолчанию устанавливаем на 404 ошибку вот такой путь
    error_page 404 /404.html;

    # Запрет доступа к файлам php в определенной директории
    location ~ ^/assets/.*\.php$ {
        deny all;
    }

    # Все запросы, оканчивающиеся на .php перенаправляем на интерпретатор PHP
    # символ ~ нам говорит о том, что дальше будет идти регулярное выражение
    # Регулярное выражение \.php$ - ищет все пути оканчивающиеся на .php ($ - конец строки, \. - экранированная точка)
    location ~ \.php$ {
        # Подключаем вспомогательный файл, который существует по умолчанию в конфигурационной папке Nginx
        # Он необходим для правильной передачи параметров в PHP
        include fastcgi_params;
        # Дополнительно донастраиваем передачу параметром
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # Указываем точку обмена данными между процессами
        #fastcgi_pass 127.0.0.1:9000;
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        # Если запрашиваемый путь не существует на сервере (нет реальной папки и файла), то устанавливаем 404 код ошибки
        try_files $uri =404;
    }

    location ~* /\. {
        deny all;
    }
}